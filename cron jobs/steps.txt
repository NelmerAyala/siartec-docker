# FUNCION SQL PARA REINICIAR SECUENCIA
CREATE OR REPLACE FUNCTION reset_sequence(sequence_name text) RETURNS void AS $$
BEGIN
  EXECUTE format('ALTER SEQUENCE %I RESTART WITH 1;', sequence_name);
END;
$$ LANGUAGE plpgsql;

# EJECUTAR FUCNION PARA REINIAR SECUENCIA
SELECT reset_sequence('daily_seq');




CRON OPCIONES:
1. OPCION

Paso 1: Acceder al Crontab
Abre el archivo de tareas programadas del usuario utilizando el siguiente comando:

bash
Copiar código
crontab -e
Paso 2: Agregar la Tarea al Crontab
Agrega la siguiente línea al archivo de crontab para ejecutar la tarea diariamente, por ejemplo, a la medianoche:

bash
Copiar código
0 0 * * * psql -U tu_usuario -d tu_base_de_datos -c "SELECT reset_sequence('daily_seq');




2. OPCION

Escribir el Script Bash:

Crea un archivo de script bash, por ejemplo reset_sequence_daily.sh:

bash
Copiar código
#!/bin/bash

# Definir la variable de entorno para la contraseña
export PGPASSWORD='tu_contraseña'

# Ejecutar el comando de reinicio de secuencia
psql -U tu_usuario -d tu_base_de_datos -c "SELECT reset_sequence('daily_seq');"

# Desexportar la variable para mayor seguridad
unset PGPASSWORD
Reemplaza 'tu_contraseña', tu_usuario, tu_base_de_datos y 'daily_seq' con los valores apropiados para tu configuración.

Guardar y Hacer el Script Ejecutable:

bash
Copiar código
chmod +x reset_sequence_daily.sh
Configurar el Cron Job:

Abre el archivo de cron con crontab -e y agrega una línea para ejecutar tu script:

bash
Copiar código
0 0 * * * /ruta/a/tu/script/reset_sequence_daily.sh /ruta/a/tu_log.log 2>&1
Consideraciones de Seguridad:
Seguridad del script: Asegúrate de que el archivo de script tenga permisos restrictivos, para que solo el usuario autorizado pueda leerlo. Por ejemplo, usa chmod 700 reset_sequence_daily.sh.

Variables de entorno: La contraseña estará expuesta momentáneamente en el entorno del script, por eso se recomienda desexportarla justo después de ejecutar psql usando unset.

Uso de .pgpass: Alternativamente, considera usar el archivo de configuración .pgpass en el directorio de inicio del usuario que ejecutará el script. Esto permite almacenar credenciales sin exponerlas directamente en el script. El archivo .pgpass debe tener permisos 600 (solo legible/escribible por el propietario).


Logs: Si deseas registrar las salidas del comando cron para resolver problemas, puedes redirigir la salida estándar y de error a un archivo de log, añadiendo al final de la línea >> /ruta/a/tu_log.log 2>&1. Esto puede ser útil para depurar cualquier problema en el futuro.